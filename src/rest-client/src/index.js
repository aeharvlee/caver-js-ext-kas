/*
 * Anchor API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-anchor/v1/api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-anchor/v1/api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.15
 *
 * Do not edit the class manually.
 *
 */

;(function(factory) {
    if (typeof define === 'function' && define.amd) {
        // AMD. Register as an anonymous module.
        define([
            './ApiClient',

            // Anchor
            './anchor/model/AnchorBlockRequest',
            './anchor/model/AnchorBlockStatus',
            './anchor/model/AnchorBlockTransactions',
            './anchor/model/AnchorTransaction',
            './anchor/model/AnchorTransactions',
            './anchor/model/Operator',
            './anchor/model/OperatorSetting',
            './anchor/model/Operators',
            './anchor/api/DataAnchoringTransactionApi',
            './anchor/api/OperatorApi',

            // TH
            './tokenHistory/model/FtContract',
            './tokenHistory/model/FtContractDetail',
            './tokenHistory/model/FtLink',
            './tokenHistory/model/FtTransfer',
            './tokenHistory/model/InvalidQueryParameterValue',
            './tokenHistory/model/TransferItem',
            './tokenHistory/model/KlayTransfer',
            './tokenHistory/model/Nft',
            './tokenHistory/model/NftContract',
            './tokenHistory/model/NftContractDetail',
            './tokenHistory/model/NftOwnershipChange',
            './tokenHistory/model/NftTransfer',
            './tokenHistory/model/PageableFtContractDetails',
            './tokenHistory/model/PageableNftContractDetails',
            './tokenHistory/model/PageableNftOwnershipChanges',
            './tokenHistory/model/PageableNfts',
            './tokenHistory/model/PageableTransfers',
            './tokenHistory/model/Transaction',
            './tokenHistory/model/Transfers',
            './tokenHistory/api/TokenApi',
            './tokenHistory/api/TokenContractApi',
            './tokenHistory/api/TokenHistoryApi',
            './tokenHistory/api/TokenOwnershipApi',

            // Wallet
            './wallet/model/Account',
            './wallet/model/AccountByPubkey',
            './wallet/model/AccountStatus',
            './wallet/model/AccountSummary',
            './wallet/model/AccountUpdateTransactionRequest',
            './wallet/model/Accounts',
            './wallet/model/AccountsByPubkey',
            './wallet/model/AnchorTransactionRequest',
            './wallet/model/CancelTransactionRequest',
            './wallet/model/ContractDeployTransactionRequest',
            './wallet/model/ContractExecutionTransactionRequest',
            './wallet/model/EmptyUpdateKeyType',
            './wallet/model/ErrorResponse',
            './wallet/model/FDAccountUpdateTransactionRequest',
            './wallet/model/FDAnchorTransactionRequest',
            './wallet/model/FDCancelTransactionRequest',
            './wallet/model/FDContractDeployTransactionRequest',
            './wallet/model/FDContractExecutionTransactionRequest',
            './wallet/model/FDProcessRLPRequest',
            './wallet/model/FDTransactionResult',
            './wallet/model/FDUserAccountUpdateTransactionRequest',
            './wallet/model/FDUserAnchorTransactionRequest',
            './wallet/model/FDUserCancelTransactionRequest',
            './wallet/model/FDUserContractDeployTransactionRequest',
            './wallet/model/FDUserContractExecutionTransactionRequest',
            './wallet/model/FDUserProcessRLPRequest',
            './wallet/model/FDUserValueTransferTransactionRequest',
            './wallet/model/FDValueTransferTransactionRequest',
            './wallet/model/FeePayerSignaturesObj',
            './wallet/model/LegacyTransactionRequest',
            './wallet/model/MultisigAccount',
            './wallet/model/MultisigAccountUpdateRequest',
            './wallet/model/MultisigAddress',
            './wallet/model/MultisigKey',
            './wallet/model/MultisigTransactionStatus',
            './wallet/model/MultisigTransactions',
            './wallet/model/MultisigUpdateKey',
            './wallet/model/MultisigUpdateKeyType',
            './wallet/model/PendedTransaction',
            './wallet/model/ProcessRLPRequest',
            './wallet/model/PubkeyUpdateKeyType',
            './wallet/model/RoleBasedUpdateKeyType',
            './wallet/model/SignPendingTransactionBySigRequest',
            './wallet/model/Signature',
            './wallet/model/TransactionReceipt',
            './wallet/model/TransactionResult',
            './wallet/model/TxData',
            './wallet/model/ValueTransferTransactionRequest',
            './wallet/api/AccountApi',
            './wallet/api/BasicTransactionApi',
            './wallet/api/FeeDelegatedTransactionPaidByKASApi',
            './wallet/api/FeeDelegatedTransactionPaidByUserApi',
            './wallet/api/MultisigTransactionManagementApi',
        ], factory)
    } else if (typeof module === 'object' && module.exports) {
        // CommonJS-like environments that support module.exports, like Node.
        module.exports = factory(
            require('./ApiClient'),

            // Anchor
            require('./anchor/model/AnchorBlockRequest'),
            require('./anchor/model/AnchorBlockStatus'),
            require('./anchor/model/AnchorBlockTransactions'),
            require('./anchor/model/AnchorTransaction'),
            require('./anchor/model/AnchorTransactions'),
            require('./anchor/model/Operator'),
            require('./anchor/model/OperatorSetting'),
            require('./anchor/model/Operators'),
            require('./anchor/api/DataAnchoringTransactionApi'),
            require('./anchor/api/OperatorApi'),

            // TH
            require('./tokenHistory/model/FtContract'),
            require('./tokenHistory/model/FtContractDetail'),
            require('./tokenHistory/model/FtLink'),
            require('./tokenHistory/model/FtTransfer'),
            require('./tokenHistory/model/InvalidQueryParameterValue'),
            require('./tokenHistory/model/TransferItem'),
            require('./tokenHistory/model/KlayTransfer'),
            require('./tokenHistory/model/Nft'),
            require('./tokenHistory/model/NftContract'),
            require('./tokenHistory/model/NftContractDetail'),
            require('./tokenHistory/model/NftOwnershipChange'),
            require('./tokenHistory/model/NftTransfer'),
            require('./tokenHistory/model/PageableFtContractDetails'),
            require('./tokenHistory/model/PageableNftContractDetails'),
            require('./tokenHistory/model/PageableNftOwnershipChanges'),
            require('./tokenHistory/model/PageableNfts'),
            require('./tokenHistory/model/PageableTransfers'),
            require('./tokenHistory/model/Transaction'),
            require('./tokenHistory/model/Transfers'),
            require('./tokenHistory/api/TokenApi'),
            require('./tokenHistory/api/TokenContractApi'),
            require('./tokenHistory/api/TokenHistoryApi'),
            require('./tokenHistory/api/TokenOwnershipApi'),

            // Wallet
            require('./wallet/model/Account'),
            require('./wallet/model/AccountByPubkey'),
            require('./wallet/model/AccountStatus'),
            require('./wallet/model/AccountSummary'),
            require('./wallet/model/AccountUpdateTransactionRequest'),
            require('./wallet/model/Accounts'),
            require('./wallet/model/AccountsByPubkey'),
            require('./wallet/model/AnchorTransactionRequest'),
            require('./wallet/model/CancelTransactionRequest'),
            require('./wallet/model/ContractDeployTransactionRequest'),
            require('./wallet/model/ContractExecutionTransactionRequest'),
            require('./wallet/model/EmptyUpdateKeyType'),
            require('./wallet/model/ErrorResponse'),
            require('./wallet/model/FDAccountUpdateTransactionRequest'),
            require('./wallet/model/FDAnchorTransactionRequest'),
            require('./wallet/model/FDCancelTransactionRequest'),
            require('./wallet/model/FDContractDeployTransactionRequest'),
            require('./wallet/model/FDContractExecutionTransactionRequest'),
            require('./wallet/model/FDProcessRLPRequest'),
            require('./wallet/model/FDTransactionResult'),
            require('./wallet/model/FDUserAccountUpdateTransactionRequest'),
            require('./wallet/model/FDUserAnchorTransactionRequest'),
            require('./wallet/model/FDUserCancelTransactionRequest'),
            require('./wallet/model/FDUserContractDeployTransactionRequest'),
            require('./wallet/model/FDUserContractExecutionTransactionRequest'),
            require('./wallet/model/FDUserProcessRLPRequest'),
            require('./wallet/model/FDUserValueTransferTransactionRequest'),
            require('./wallet/model/FDValueTransferTransactionRequest'),
            require('./wallet/model/FeePayerSignaturesObj'),
            require('./wallet/model/LegacyTransactionRequest'),
            require('./wallet/model/MultisigAccount'),
            require('./wallet/model/MultisigAccountUpdateRequest'),
            require('./wallet/model/MultisigAddress'),
            require('./wallet/model/MultisigKey'),
            require('./wallet/model/MultisigTransactionStatus'),
            require('./wallet/model/MultisigTransactions'),
            require('./wallet/model/MultisigUpdateKey'),
            require('./wallet/model/MultisigUpdateKeyType'),
            require('./wallet/model/PendedTransaction'),
            require('./wallet/model/ProcessRLPRequest'),
            require('./wallet/model/PubkeyUpdateKeyType'),
            require('./wallet/model/RoleBasedUpdateKeyType'),
            require('./wallet/model/SignPendingTransactionBySigRequest'),
            require('./wallet/model/Signature'),
            require('./wallet/model/TransactionReceipt'),
            require('./wallet/model/TransactionResult'),
            require('./wallet/model/TxData'),
            require('./wallet/model/ValueTransferTransactionRequest'),
            require('./wallet/api/AccountApi'),
            require('./wallet/api/BasicTransactionApi'),
            require('./wallet/api/FeeDelegatedTransactionPaidByKASApi'),
            require('./wallet/api/FeeDelegatedTransactionPaidByUserApi'),
            require('./wallet/api/MultisigTransactionManagementApi')
        )
    }
})(function(
    ApiClient,

    // Anchor
    AnchorBlockRequest,
    AnchorBlockStatus,
    AnchorBlockTransactions,
    AnchorTransaction,
    AnchorTransactions,
    Operator,
    OperatorSetting,
    Operators,
    DataAnchoringTransactionApi,
    OperatorApi,

    // TH
    FtContract,
    FtContractDetail,
    FtLink,
    FtTransfer,
    InvalidQueryParameterValue,
    TransferItem,
    KlayTransfer,
    Nft,
    NftContract,
    NftContractDetail,
    NftOwnershipChange,
    NftTransfer,
    PageableFtContractDetails,
    PageableNftContractDetails,
    PageableNftOwnershipChanges,
    PageableNfts,
    PageableTransfers,
    Transaction,
    Transfers,
    TokenApi,
    TokenContractApi,
    TokenHistoryApi,
    TokenOwnershipApi,

    // Wallet
    Account,
    AccountByPubkey,
    AccountStatus,
    AccountSummary,
    AccountUpdateTransactionRequest,
    Accounts,
    AccountsByPubkey,
    AnchorTransactionRequest,
    CancelTransactionRequest,
    ContractDeployTransactionRequest,
    ContractExecutionTransactionRequest,
    EmptyUpdateKeyType,
    ErrorResponse,
    FDAccountUpdateTransactionRequest,
    FDAnchorTransactionRequest,
    FDCancelTransactionRequest,
    FDContractDeployTransactionRequest,
    FDContractExecutionTransactionRequest,
    FDProcessRLPRequest,
    FDTransactionResult,
    FDUserAccountUpdateTransactionRequest,
    FDUserAnchorTransactionRequest,
    FDUserCancelTransactionRequest,
    FDUserContractDeployTransactionRequest,
    FDUserContractExecutionTransactionRequest,
    FDUserProcessRLPRequest,
    FDUserValueTransferTransactionRequest,
    FDValueTransferTransactionRequest,
    FeePayerSignaturesObj,
    LegacyTransactionRequest,
    MultisigAccount,
    MultisigAccountUpdateRequest,
    MultisigAddress,
    MultisigKey,
    MultisigTransactionStatus,
    MultisigTransactions,
    MultisigUpdateKey,
    MultisigUpdateKeyType,
    PendedTransaction,
    ProcessRLPRequest,
    PubkeyUpdateKeyType,
    RoleBasedUpdateKeyType,
    SignPendingTransactionBySigRequest,
    Signature,
    TransactionReceipt,
    TransactionResult,
    TxData,
    ValueTransferTransactionRequest,
    AccountApi,
    BasicTransactionApi,
    FeeDelegatedTransactionPaidByKASApi,
    FeeDelegatedTransactionPaidByUserApi,
    MultisigTransactionManagementApi
) {
    /**
     * ERROR_UNKNOWN.<br>
     * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
     * <p>
     * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
     * <pre>
     * var AnchorApi = require('index'); // See note below*.
     * var xxxSvc = new AnchorApi.XxxApi(); // Allocate the API class we're going to use.
     * var yyyModel = new AnchorApi.Yyy(); // Construct a model instance.
     * yyyModel.someProperty = 'someValue';
     * ...
     * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
     * ...
     * </pre>
     * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
     * and put the application logic within the callback function.</em>
     * </p>
     * <p>
     * A non-AMD browser application (discouraged) might do something like this:
     * <pre>
     * var xxxSvc = new AnchorApi.XxxApi(); // Allocate the API class we're going to use.
     * var yyy = new AnchorApi.Yyy(); // Construct a model instance.
     * yyyModel.someProperty = 'someValue';
     * ...
     * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
     * ...
     * </pre>
     * </p>
     * @module index
     * @version 1.0
     */
    const exports = {
        /**
         * The ApiClient constructor.
         * @property {module:ApiClient}
         */
        ApiClient: ApiClient,

        /**
         * The AnchorBlockRequest model constructor.
         * @property {module:anchor/model/AnchorBlockRequest}
         */
        AnchorBlockRequest: AnchorBlockRequest,
        /**
         * The AnchorBlockStatus model constructor.
         * @property {module:anchor/model/AnchorBlockStatus}
         */
        AnchorBlockStatus: AnchorBlockStatus,
        /**
         * The AnchorBlockTransactions model constructor.
         * @property {module:anchor/model/AnchorBlockTransactions}
         */
        AnchorBlockTransactions: AnchorBlockTransactions,
        /**
         * The AnchorTransaction model constructor.
         * @property {module:anchor/model/AnchorTransaction}
         */
        AnchorTransaction: AnchorTransaction,
        /**
         * The AnchorTransactions model constructor.
         * @property {module:anchor/model/AnchorTransactions}
         */
        AnchorTransactions: AnchorTransactions,
        /**
         * The Operator model constructor.
         * @property {module:anchor/model/Operator}
         */
        Operator: Operator,
        /**
         * The OperatorSetting model constructor.
         * @property {module:anchor/model/OperatorSetting}
         */
        OperatorSetting: OperatorSetting,
        /**
         * The Operators model constructor.
         * @property {module:anchor/model/Operators}
         */
        Operators: Operators,
        /**
         * The DataAnchoringTransactionApi service constructor.
         * @property {module:anchor/api/DataAnchoringTransactionApi}
         */
        DataAnchoringTransactionApi: DataAnchoringTransactionApi,
        /**
         * The OperatorApi service constructor.
         * @property {module:anchor/api/OperatorApi}
         */
        OperatorApi: OperatorApi,
        /**
         * The FtContract model constructor.
         * @property {module:tokenHistory/model/FtContract}
         */
        FtContract: FtContract,
        /**
         * The FtContractDetail model constructor.
         * @property {module:tokenHistory/model/FtContractDetail}
         */
        FtContractDetail: FtContractDetail,
        /**
         * The FtLink model constructor.
         * @property {module:tokenHistory/model/FtLink}
         */
        FtLink: FtLink,
        /**
         * The FtTransfer model constructor.
         * @property {module:tokenHistory/model/FtTransfer}
         */
        FtTransfer: FtTransfer,
        /**
         * The InvalidQueryParameterValue model constructor.
         * @property {module:tokenHistory/model/InvalidQueryParameterValue}
         */
        InvalidQueryParameterValue: InvalidQueryParameterValue,
        /**
         * The TransferItem model constructor.
         * @property {module:tokenHistory/model/TransferItem}
         */
        TransferItem: TransferItem,
        /**
         * The KlayTransfer model constructor.
         * @property {module:tokenHistory/model/KlayTransfer}
         */
        KlayTransfer: KlayTransfer,
        /**
         * The Nft model constructor.
         * @property {module:tokenHistory/model/Nft}
         */
        Nft: Nft,
        /**
         * The NftContract model constructor.
         * @property {module:tokenHistory/model/NftContract}
         */
        NftContract: NftContract,
        /**
         * The NftContractDetail model constructor.
         * @property {module:tokenHistory/model/NftContractDetail}
         */
        NftContractDetail: NftContractDetail,
        /**
         * The NftOwnershipChange model constructor.
         * @property {module:tokenHistory/model/NftOwnershipChange}
         */
        NftOwnershipChange: NftOwnershipChange,
        /**
         * The NftTransfer model constructor.
         * @property {module:tokenHistory/model/NftTransfer}
         */
        NftTransfer: NftTransfer,
        /**
         * The PageableFtContractDetails model constructor.
         * @property {module:tokenHistory/model/PageableFtContractDetails}
         */
        PageableFtContractDetails: PageableFtContractDetails,
        /**
         * The PageableNftContractDetails model constructor.
         * @property {module:tokenHistory/model/PageableNftContractDetails}
         */
        PageableNftContractDetails: PageableNftContractDetails,
        /**
         * The PageableNftOwnershipChanges model constructor.
         * @property {module:tokenHistory/model/PageableNftOwnershipChanges}
         */
        PageableNftOwnershipChanges: PageableNftOwnershipChanges,
        /**
         * The PageableNfts model constructor.
         * @property {module:tokenHistory/model/PageableNfts}
         */
        PageableNfts: PageableNfts,
        /**
         * The PageableTransfers model constructor.
         * @property {module:tokenHistory/model/PageableTransfers}
         */
        PageableTransfers: PageableTransfers,
        /**
         * The Transaction model constructor.
         * @property {module:tokenHistory/model/Transaction}
         */
        Transaction: Transaction,
        /**
         * The Transfers model constructor.
         * @property {module:tokenHistory/model/Transfers}
         */
        Transfers: Transfers,
        /**
         * The TokenApi service constructor.
         * @property {module:tokenHistory/api/TokenApi}
         */
        TokenApi: TokenApi,
        /**
         * The TokenContractApi service constructor.
         * @property {module:tokenHistory/api/TokenContractApi}
         */
        TokenContractApi: TokenContractApi,
        /**
         * The TokenHistoryApi service constructor.
         * @property {module:tokenHistory/api/TokenHistoryApi}
         */
        TokenHistoryApi: TokenHistoryApi,
        /**
         * The TokenOwnershipApi service constructor.
         * @property {module:tokenHistory/api/TokenOwnershipApi}
         */
        TokenOwnershipApi: TokenOwnershipApi,
        /**
         * The Account model constructor.
         * @property {module:wallet/model/Account}
         */
        Account: Account,
        /**
         * The AccountByPubkey model constructor.
         * @property {module:wallet/model/AccountByPubkey}
         */
        AccountByPubkey: AccountByPubkey,
        /**
         * The AccountStatus model constructor.
         * @property {module:wallet/model/AccountStatus}
         */
        AccountStatus: AccountStatus,
        /**
         * The AccountSummary model constructor.
         * @property {module:wallet/model/AccountSummary}
         */
        AccountSummary: AccountSummary,
        /**
         * The AccountUpdateTransactionRequest model constructor.
         * @property {module:wallet/model/AccountUpdateTransactionRequest}
         */
        AccountUpdateTransactionRequest: AccountUpdateTransactionRequest,
        /**
         * The Accounts model constructor.
         * @property {module:wallet/model/Accounts}
         */
        Accounts: Accounts,
        /**
         * The AccountsByPubkey model constructor.
         * @property {module:wallet/model/AccountsByPubkey}
         */
        AccountsByPubkey: AccountsByPubkey,
        /**
         * The AnchorTransactionRequest model constructor.
         * @property {module:wallet/model/AnchorTransactionRequest}
         */
        AnchorTransactionRequest: AnchorTransactionRequest,
        /**
         * The CancelTransactionRequest model constructor.
         * @property {module:wallet/model/CancelTransactionRequest}
         */
        CancelTransactionRequest: CancelTransactionRequest,
        /**
         * The ContractDeployTransactionRequest model constructor.
         * @property {module:wallet/model/ContractDeployTransactionRequest}
         */
        ContractDeployTransactionRequest: ContractDeployTransactionRequest,
        /**
         * The ContractExecutionTransactionRequest model constructor.
         * @property {module:wallet/model/ContractExecutionTransactionRequest}
         */
        ContractExecutionTransactionRequest: ContractExecutionTransactionRequest,
        /**
         * The EmptyUpdateKeyType model constructor.
         * @property {module:wallet/model/EmptyUpdateKeyType}
         */
        EmptyUpdateKeyType: EmptyUpdateKeyType,
        /**
         * The ErrorResponse model constructor.
         * @property {module:wallet/model/ErrorResponse}
         */
        ErrorResponse: ErrorResponse,
        /**
         * The FDAccountUpdateTransactionRequest model constructor.
         * @property {module:wallet/model/FDAccountUpdateTransactionRequest}
         */
        FDAccountUpdateTransactionRequest: FDAccountUpdateTransactionRequest,
        /**
         * The FDAnchorTransactionRequest model constructor.
         * @property {module:wallet/model/FDAnchorTransactionRequest}
         */
        FDAnchorTransactionRequest: FDAnchorTransactionRequest,
        /**
         * The FDCancelTransactionRequest model constructor.
         * @property {module:wallet/model/FDCancelTransactionRequest}
         */
        FDCancelTransactionRequest: FDCancelTransactionRequest,
        /**
         * The FDContractDeployTransactionRequest model constructor.
         * @property {module:wallet/model/FDContractDeployTransactionRequest}
         */
        FDContractDeployTransactionRequest: FDContractDeployTransactionRequest,
        /**
         * The FDContractExecutionTransactionRequest model constructor.
         * @property {module:wallet/model/FDContractExecutionTransactionRequest}
         */
        FDContractExecutionTransactionRequest: FDContractExecutionTransactionRequest,
        /**
         * The FDProcessRLPRequest model constructor.
         * @property {module:wallet/model/FDProcessRLPRequest}
         */
        FDProcessRLPRequest: FDProcessRLPRequest,
        /**
         * The FDTransactionResult model constructor.
         * @property {module:wallet/model/FDTransactionResult}
         */
        FDTransactionResult: FDTransactionResult,
        /**
         * The FDUserAccountUpdateTransactionRequest model constructor.
         * @property {module:wallet/model/FDUserAccountUpdateTransactionRequest}
         */
        FDUserAccountUpdateTransactionRequest: FDUserAccountUpdateTransactionRequest,
        /**
         * The FDUserAnchorTransactionRequest model constructor.
         * @property {module:wallet/model/FDUserAnchorTransactionRequest}
         */
        FDUserAnchorTransactionRequest: FDUserAnchorTransactionRequest,
        /**
         * The FDUserCancelTransactionRequest model constructor.
         * @property {module:wallet/model/FDUserCancelTransactionRequest}
         */
        FDUserCancelTransactionRequest: FDUserCancelTransactionRequest,
        /**
         * The FDUserContractDeployTransactionRequest model constructor.
         * @property {module:wallet/model/FDUserContractDeployTransactionRequest}
         */
        FDUserContractDeployTransactionRequest: FDUserContractDeployTransactionRequest,
        /**
         * The FDUserContractExecutionTransactionRequest model constructor.
         * @property {module:wallet/model/FDUserContractExecutionTransactionRequest}
         */
        FDUserContractExecutionTransactionRequest: FDUserContractExecutionTransactionRequest,
        /**
         * The FDUserProcessRLPRequest model constructor.
         * @property {module:wallet/model/FDUserProcessRLPRequest}
         */
        FDUserProcessRLPRequest: FDUserProcessRLPRequest,
        /**
         * The FDUserValueTransferTransactionRequest model constructor.
         * @property {module:wallet/model/FDUserValueTransferTransactionRequest}
         */
        FDUserValueTransferTransactionRequest: FDUserValueTransferTransactionRequest,
        /**
         * The FDValueTransferTransactionRequest model constructor.
         * @property {module:wallet/model/FDValueTransferTransactionRequest}
         */
        FDValueTransferTransactionRequest: FDValueTransferTransactionRequest,
        /**
         * The FeePayerSignaturesObj model constructor.
         * @property {module:wallet/model/FeePayerSignaturesObj}
         */
        FeePayerSignaturesObj: FeePayerSignaturesObj,
        /**
         * The LegacyTransactionRequest model constructor.
         * @property {module:wallet/model/LegacyTransactionRequest}
         */
        LegacyTransactionRequest: LegacyTransactionRequest,
        /**
         * The MultisigAccount model constructor.
         * @property {module:wallet/model/MultisigAccount}
         */
        MultisigAccount: MultisigAccount,
        /**
         * The MultisigAccountUpdateRequest model constructor.
         * @property {module:wallet/model/MultisigAccountUpdateRequest}
         */
        MultisigAccountUpdateRequest: MultisigAccountUpdateRequest,
        /**
         * The MultisigAddress model constructor.
         * @property {module:wallet/model/MultisigAddress}
         */
        MultisigAddress: MultisigAddress,
        /**
         * The MultisigKey model constructor.
         * @property {module:wallet/model/MultisigKey}
         */
        MultisigKey: MultisigKey,
        /**
         * The MultisigTransactionStatus model constructor.
         * @property {module:wallet/model/MultisigTransactionStatus}
         */
        MultisigTransactionStatus: MultisigTransactionStatus,
        /**
         * The MultisigTransactions model constructor.
         * @property {module:wallet/model/MultisigTransactions}
         */
        MultisigTransactions: MultisigTransactions,
        /**
         * The MultisigUpdateKey model constructor.
         * @property {module:wallet/model/MultisigUpdateKey}
         */
        MultisigUpdateKey: MultisigUpdateKey,
        /**
         * The MultisigUpdateKeyType model constructor.
         * @property {module:wallet/model/MultisigUpdateKeyType}
         */
        MultisigUpdateKeyType: MultisigUpdateKeyType,
        /**
         * The PendedTransaction model constructor.
         * @property {module:wallet/model/PendedTransaction}
         */
        PendedTransaction: PendedTransaction,
        /**
         * The ProcessRLPRequest model constructor.
         * @property {module:wallet/model/ProcessRLPRequest}
         */
        ProcessRLPRequest: ProcessRLPRequest,
        /**
         * The PubkeyUpdateKeyType model constructor.
         * @property {module:wallet/model/PubkeyUpdateKeyType}
         */
        PubkeyUpdateKeyType: PubkeyUpdateKeyType,
        /**
         * The RoleBasedUpdateKeyType model constructor.
         * @property {module:wallet/model/RoleBasedUpdateKeyType}
         */
        RoleBasedUpdateKeyType: RoleBasedUpdateKeyType,
        /**
         * The SignPendingTransactionBySigRequest model constructor.
         * @property {module:wallet/model/SignPendingTransactionBySigRequest}
         */
        SignPendingTransactionBySigRequest: SignPendingTransactionBySigRequest,
        /**
         * The Signature model constructor.
         * @property {module:wallet/model/Signature}
         */
        Signature: Signature,
        /**
         * The TransactionReceipt model constructor.
         * @property {module:wallet/model/TransactionReceipt}
         */
        TransactionReceipt: TransactionReceipt,
        /**
         * The TransactionResult model constructor.
         * @property {module:wallet/model/TransactionResult}
         */
        TransactionResult: TransactionResult,
        /**
         * The TxData model constructor.
         * @property {module:wallet/model/TxData}
         */
        TxData: TxData,
        /**
         * The ValueTransferTransactionRequest model constructor.
         * @property {module:wallet/model/ValueTransferTransactionRequest}
         */
        ValueTransferTransactionRequest: ValueTransferTransactionRequest,
        /**
         * The AccountApi service constructor.
         * @property {module:wallet/api/AccountApi}
         */
        AccountApi: AccountApi,
        /**
         * The BasicTransactionApi service constructor.
         * @property {module:wallet/api/BasicTransactionApi}
         */
        BasicTransactionApi: BasicTransactionApi,
        /**
         * The FeeDelegatedTransactionPaidByKASApi service constructor.
         * @property {module:wallet/api/FeeDelegatedTransactionPaidByKASApi}
         */
        FeeDelegatedTransactionPaidByKASApi: FeeDelegatedTransactionPaidByKASApi,
        /**
         * The FeeDelegatedTransactionPaidByUserApi service constructor.
         * @property {module:wallet/api/FeeDelegatedTransactionPaidByUserApi}
         */
        FeeDelegatedTransactionPaidByUserApi: FeeDelegatedTransactionPaidByUserApi,
        /**
         * The MultisigTransactionManagementApi service constructor.
         * @property {module:wallet/api/MultisigTransactionManagementApi}
         */
        MultisigTransactionManagementApi: MultisigTransactionManagementApi,
    }

    return exports
})
